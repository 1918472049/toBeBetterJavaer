const e=JSON.parse('{"key":"v-086d8a22","path":"/oo/access-control.html","title":"聊一聊Java中的访问权限修饰符","lang":"zh-CN","frontmatter":{"title":"聊一聊Java中的访问权限修饰符","shortTitle":"Java中的访问权限修饰符","description":"Java程序员进阶之路，小白的零基础Java教程，聊一聊Java中的访问权限修饰符","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java访问权限修饰符,public,private,protected,访问权限修饰符"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/oo/access-control.html"}],["meta",{"property":"og:site_name","content":"Java进阶之路"}],["meta",{"property":"og:title","content":"聊一聊Java中的访问权限修饰符"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，聊一聊Java中的访问权限修饰符"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-07T08:12:58.000Z"}],["meta",{"property":"article:tag","content":"面向对象编程"}],["meta",{"property":"article:modified_time","content":"2023-03-07T08:12:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"聊一聊Java中的访问权限修饰符\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-07T08:12:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"1. 修饰类","slug":"_1-修饰类","link":"#_1-修饰类","children":[]},{"level":3,"title":"2. 修饰方法和变量","slug":"_2-修饰方法和变量","link":"#_2-修饰方法和变量","children":[]}],"git":{"createdTime":1660095699000,"updatedTime":1678176778000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":6},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":5.89,"words":1766},"filePathRelative":"oo/access-control.md","localizedDate":"2022年8月10日","excerpt":"<h1> 5.8 Java中的访问权限修饰符</h1>\\n<p>“我们先来讨论一下为什么需要访问权限控制。其实之前我们在讲类和对象的时候有提到，今天我们来详细地聊一聊，三妹。”我开门见山地说，“三妹，你打开思维导图，记得做笔记哦。”</p>\\n<p>“好的。”三妹应声回答。</p>\\n<p>考虑两个场景：</p>\\n<p>场景 1：工程师 A 编写了一个类 ClassA，但是工程师 A 并不希望 ClassA 被其他类都访问到，该如何处理呢？</p>\\n<p>场景 2：工程师 A 编写了一个类 ClassA，其中有两个方法 fun1、fun2，工程师只想让 fun1 对外可见，也就是说，如果别的工程师来调用 ClassA，只可以调用方法 fun1，该怎么处理呢？</p>"}');export{e as data};
