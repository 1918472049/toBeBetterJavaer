const t=JSON.parse('{"key":"v-37e734fc","path":"/oo/polymorphism.html","title":"几句话，直观解释清楚 Java 多态（三大特征之一）","lang":"zh-CN","frontmatter":{"title":"几句话，直观解释清楚 Java 多态（三大特征之一）","shortTitle":"几句话直观解释Java多态","description":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java的三大特征：多态","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java多态,多态"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/oo/polymorphism.html"}],["meta",{"property":"og:site_name","content":"Java程序员进阶之路"}],["meta",{"property":"og:title","content":"几句话，直观解释清楚 Java 多态（三大特征之一）"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java的三大特征：多态"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"面向对象编程"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"几句话，直观解释清楚 Java 多态（三大特征之一）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"01、多态是什么","slug":"_01、多态是什么","link":"#_01、多态是什么","children":[]},{"level":2,"title":"02、多态与后期绑定","slug":"_02、多态与后期绑定","link":"#_02、多态与后期绑定","children":[]},{"level":2,"title":"03、多态与构造器","slug":"_03、多态与构造器","link":"#_03、多态与构造器","children":[]},{"level":2,"title":"04、多态与向下转型","slug":"_04、多态与向下转型","link":"#_04、多态与向下转型","children":[]}],"git":{"createdTime":1660229826000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":6}]},"readingTime":{"minutes":6.18,"words":1853},"filePathRelative":"oo/polymorphism.md","localizedDate":"2022年8月11日","excerpt":"<p><strong>多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编译时并不确定，而是在程序运行期间才确定。</strong></p>\\n<p><strong>即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。</strong></p>\\n<p><strong>因为在程序运行时才确定具体的类，这样，不用修改源程序代码，就可以让引用变量绑定到各种不同的类实现上，从而导致该引用调用的具体方法随之改变，即不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，这就是多态性。</strong></p>"}');export{t as data};
