const a=JSON.parse('{"key":"v-7c307347","path":"/basic-extra-meal/hashcode.html","title":"深入理解Java中的hashCode方法","lang":"zh-CN","frontmatter":{"title":"深入理解Java中的hashCode方法","shortTitle":"深入理解Java中的hashCode方法","category":["Java核心"],"tag":["Java重要知识点"],"description":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，深入理解Java中的hashCode方法","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,java,hashcode"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/basic-extra-meal/hashcode.html"}],["meta",{"property":"og:site_name","content":"Java进阶之路"}],["meta",{"property":"og:title","content":"深入理解Java中的hashCode方法"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，深入理解Java中的hashCode方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"Java重要知识点"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解Java中的hashCode方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1647355350000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":9},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":9.46,"words":2837},"filePathRelative":"basic-extra-meal/hashcode.md","localizedDate":"2022年3月15日","excerpt":"<p>假期结束了，需要快速切换到工作的状态投入到新的一天当中。放假的时候痛快地玩耍，上班的时候积极的工作，这应该是我们大多数“现代人”该有的生活状态。</p>\\n<p>我之所以费尽心思铺垫了前面这段话，就是想告诉大家，技术文虽迟但到，来吧，学起来~</p>\\n<p>今天我们来谈谈 Java 中的 <code>hashCode()</code> 方法。众所周知，Java 是一门面向对象的编程语言，所有的类都会默认继承自 Object 类，而 Object 的中文意思就是“对象”。</p>\\n<p>Object 类中就包含了 <code>hashCode()</code> 方法：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@HotSpotIntrinsicCandidate</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">native</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">hashCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
