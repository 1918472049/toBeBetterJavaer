const a=JSON.parse('{"key":"v-06b06a8e","path":"/basic-extra-meal/generic.html","title":"深入理解Java中的泛型","lang":"zh-CN","frontmatter":{"title":"深入理解Java中的泛型","shortTitle":"泛型","category":["Java核心"],"tag":["Java重要知识点"],"description":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，深入理解Java中的泛型","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,java,泛型,java 泛型,java generic"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/basic-extra-meal/generic.html"}],["meta",{"property":"og:site_name","content":"Java进阶之路"}],["meta",{"property":"og:title","content":"深入理解Java中的泛型"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，深入理解Java中的泛型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-14T09:36:43.000Z"}],["meta",{"property":"article:tag","content":"Java重要知识点"}],["meta",{"property":"article:modified_time","content":"2023-03-14T09:36:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解Java中的泛型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-14T09:36:43.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"动手设计一个泛型","slug":"动手设计一个泛型","link":"#动手设计一个泛型","children":[]},{"level":3,"title":"泛型限定符","slug":"泛型限定符","link":"#泛型限定符","children":[]},{"level":3,"title":"类型擦除","slug":"类型擦除","link":"#类型擦除","children":[]},{"level":3,"title":"泛型通配符","slug":"泛型通配符","link":"#泛型通配符","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1634887330000,"updatedTime":1678786603000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":14},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":13.85,"words":4156},"filePathRelative":"basic-extra-meal/generic.md","localizedDate":"2021年10月22日","excerpt":"<h1> 6.6 泛型</h1>\\n<p>“二哥，为什么要设计泛型啊？”三妹开门见山地问。</p>\\n<p>“三妹啊，听哥慢慢给你讲啊。”我说。</p>\\n<p>Java 在 1.5 时增加了泛型机制，据说专家们为此花费了 5 年左右的时间（听起来是相当不容易）。有了泛型之后，尤其是对集合类的使用，就变得更规范了。</p>\\n<p>看下面这段简单的代码。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> list <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nlist<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"沉默王二\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">String</span> str <span class=\\"token operator\\">=</span> list<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
