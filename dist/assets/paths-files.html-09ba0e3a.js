const a=JSON.parse('{"key":"v-7eb04215","path":"/nio/paths-files.html","title":"详解 Java 中的File、Paths、Files三个类","lang":"zh-CN","frontmatter":{"title":"详解 Java 中的File、Paths、Files三个类","shortTitle":"File、Paths、Files","category":["Java核心"],"tag":["Java IO"],"description":"Java程序员进阶之路，小白的零基础Java教程，详解 File、Path、Paths、Files，操作文件不再难","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java IO,file,paths,files,path,java文件,java目录,java文件增删改查,java file,java paths,java files"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/nio/paths-files.html"}],["meta",{"property":"og:site_name","content":"Java进阶之路"}],["meta",{"property":"og:title","content":"详解 Java 中的File、Paths、Files三个类"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，详解 File、Path、Paths、Files，操作文件不再难"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T08:31:39.000Z"}],["meta",{"property":"article:tag","content":"Java IO"}],["meta",{"property":"article:modified_time","content":"2023-03-17T08:31:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"详解 Java 中的File、Paths、Files三个类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-17T08:31:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"Path 接口与Paths 类","slug":"path-接口与paths-类","link":"#path-接口与paths-类","children":[]},{"level":2,"title":"Files 类","slug":"files-类","link":"#files-类","children":[{"level":3,"title":"判断文件是否存在","slug":"判断文件是否存在","link":"#判断文件是否存在","children":[]},{"level":3,"title":"createDirectory(Path path) 创建目录","slug":"createdirectory-path-path-创建目录","link":"#createdirectory-path-path-创建目录","children":[]},{"level":3,"title":"复制文件","slug":"复制文件","link":"#复制文件","children":[]},{"level":3,"title":"移动文件/文件夹","slug":"移动文件-文件夹","link":"#移动文件-文件夹","children":[]},{"level":3,"title":"删除文件/文件夹","slug":"删除文件-文件夹","link":"#删除文件-文件夹","children":[]},{"level":3,"title":"Files.walkFileTree() 静态方法","slug":"files-walkfiletree-静态方法","link":"#files-walkfiletree-静态方法","children":[]},{"level":3,"title":"搜索文件","slug":"搜索文件","link":"#搜索文件","children":[]},{"level":3,"title":"Files 类中的其他方法","slug":"files-类中的其他方法","link":"#files-类中的其他方法","children":[]}]}],"git":{"createdTime":1679041899000,"updatedTime":1679041899000,"contributors":[{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":8.15,"words":2446},"filePathRelative":"nio/paths-files.md","localizedDate":"2023年3月17日","excerpt":"<h3> Path 接口与Paths 类</h3>\\n<p>Path 是 Java NIO.2 中的一个类，用于表示文件系统中的路径。它提供了一种平台无关的方式来操作文件系统中的路径，包括创建、修改、查询和删除文件或目录等操作。</p>\\n<h4> 创建 Path 对象</h4>\\n<p>可以使用名为 Paths.get() 创建 Path 实例，get()方法是 Path 实例的工厂方法，一个示例如下：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 使用绝对路径创建</span>\\n<span class=\\"token class-name\\">Path</span> absolutePath <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Paths</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/Users/username/test/1.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 使用相对路径创建</span>\\n<span class=\\"token class-name\\">Path</span> relativePath <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Paths</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"1.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>absolutePath<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>relativePath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
