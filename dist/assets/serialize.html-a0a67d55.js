const e=JSON.parse('{"key":"v-adf5afae","path":"/io/serialize.html","title":"Java序列化流，字节和对象之间的序列化和反序列化","lang":"zh-CN","frontmatter":{"title":"Java序列化流，字节和对象之间的序列化和反序列化","shortTitle":"Java序列化流(序列化和反序列化)","category":["Java核心"],"tag":["Java IO"],"description":"Java程序员进阶之路，小白的零基础Java教程，Java序列化流，字节和对象之间的序列化和反序列化","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java IO,序列化流,java序列化,java反序列化,ObjectOutputStream,ObjectInputStream"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/io/serialize.html"}],["meta",{"property":"og:site_name","content":"Java程序员进阶之路"}],["meta",{"property":"og:title","content":"Java序列化流，字节和对象之间的序列化和反序列化"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，Java序列化流，字节和对象之间的序列化和反序列化"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"Java IO"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java序列化流，字节和对象之间的序列化和反序列化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"何谓序列化","slug":"何谓序列化","link":"#何谓序列化","children":[]},{"level":2,"title":"ObjectOutputStream类","slug":"objectoutputstream类","link":"#objectoutputstream类","children":[{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":3,"title":"序列化操作","slug":"序列化操作","link":"#序列化操作","children":[]}]},{"level":2,"title":"ObjectInputStream类","slug":"objectinputstream类","link":"#objectinputstream类","children":[{"level":3,"title":"构造方法","slug":"构造方法-1","link":"#构造方法-1","children":[]},{"level":3,"title":"反序列化操作1","slug":"反序列化操作1","link":"#反序列化操作1","children":[]},{"level":3,"title":"反序列化操作2","slug":"反序列化操作2","link":"#反序列化操作2","children":[]}]},{"level":2,"title":"序列化集合练习","slug":"序列化集合练习","link":"#序列化集合练习","children":[{"level":3,"title":"案例分析","slug":"案例分析","link":"#案例分析","children":[]},{"level":3,"title":"案例代码实现","slug":"案例代码实现","link":"#案例代码实现","children":[]}]}],"git":{"createdTime":1661412910000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":3},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":5.33,"words":1600},"filePathRelative":"io/serialize.md","localizedDate":"2022年8月25日","excerpt":"<p>序列化有什么好处呢？可以把对象写入文本文件或者在网络中传输。</p>\\n<p>如何实现序列化呢？让被序列化的对象所属类实现<a href=\\"https://tobebetterjavaer.com/io/Serializbale.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Serializbale序列化接口</a>。</p>\\n<p>接着我们来继续聊序列化和反序列化。</p>\\n<h2> 何谓序列化</h2>\\n<p>Java 提供了一种对象<strong>序列化</strong>的机制。用一个字节序列可以表示一个对象，该字节序列包含该<code>对象的数据</code>、<code>对象的类型</code>和<code>对象中存储的属性</code>等信息。字节序列写出到文件之后，相当于文件中<strong>持久保存</strong>了一个对象的信息。</p>"}');export{e as data};
