const a=JSON.parse('{"key":"v-60be3e7a","path":"/collection/hashmap.html","title":"Java HashMap详解（附源码分析）","lang":"zh-CN","frontmatter":{"title":"Java HashMap详解（附源码分析）","shortTitle":"HashMap详解","category":["Java核心"],"tag":["集合框架（容器）"],"description":"Java程序员进阶之路，小白的零基础Java教程，Java HashMap详解","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,HashMap"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/collection/hashmap.html"}],["meta",{"property":"og:site_name","content":"Java程序员进阶之路"}],["meta",{"property":"og:title","content":"Java HashMap详解（附源码分析）"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，Java HashMap详解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"集合框架（容器）"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java HashMap详解（附源码分析）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、hash 方法的原理","slug":"一、hash-方法的原理","link":"#一、hash-方法的原理","children":[]},{"level":2,"title":"二、扩容机制","slug":"二、扩容机制","link":"#二、扩容机制","children":[]},{"level":2,"title":"三、加载因子为什么是0.75","slug":"三、加载因子为什么是0-75","link":"#三、加载因子为什么是0-75","children":[]},{"level":2,"title":"四、线程不安全","slug":"四、线程不安全","link":"#四、线程不安全","children":[{"level":3,"title":"01、多线程下扩容会死循环","slug":"_01、多线程下扩容会死循环","link":"#_01、多线程下扩容会死循环","children":[]},{"level":3,"title":"02、多线程下 put 会导致元素丢失","slug":"_02、多线程下-put-会导致元素丢失","link":"#_02、多线程下-put-会导致元素丢失","children":[]},{"level":3,"title":"03、put 和 get 并发时会导致 get 到 null","slug":"_03、put-和-get-并发时会导致-get-到-null","link":"#_03、put-和-get-并发时会导致-get-到-null","children":[]}]}],"git":{"createdTime":1647355350000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":23.87,"words":7160},"filePathRelative":"collection/hashmap.md","localizedDate":"2022年3月15日","excerpt":"<p>这篇文章将通过源码的方式，详细透彻地讲清楚 Java 的 HashMap，包括HashMap hash 方法的原理、HashMap 的扩容机制、HashMap的加载因子为什么是 0.75 而不是 0.6、0.8，以及 HashMap 为什么是线程不安全的，所有 HashMap 的常见面试题，都会在这一篇文章里讲明白。</p>\\n<h2> 一、hash 方法的原理</h2>\\n<p>来看一下 hash 方法的源码（JDK 8 中的 HashMap）：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">hash</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> h<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>key <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">?</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">=</span> key<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hashCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">^</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">&gt;&gt;&gt;</span> <span class=\\"token number\\">16</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
