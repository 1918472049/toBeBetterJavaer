const a=JSON.parse('{"key":"v-3684a67a","path":"/basic-extra-meal/deep-copy.html","title":"一文彻底讲明白的Java中的浅拷贝与深拷贝","lang":"zh-CN","frontmatter":{"title":"一文彻底讲明白的Java中的浅拷贝与深拷贝","shortTitle":"Java中的浅拷贝与深拷贝","category":["Java核心"],"tag":["Java重要知识点"],"description":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，一文彻底讲明白的Java中的浅拷贝与深拷贝","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,java,深拷贝,浅拷贝"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/basic-extra-meal/deep-copy.html"}],["meta",{"property":"og:site_name","content":"Java进阶之路"}],["meta",{"property":"og:title","content":"一文彻底讲明白的Java中的浅拷贝与深拷贝"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，从入门到进阶，一文彻底讲明白的Java中的浅拷贝与深拷贝"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"Java重要知识点"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一文彻底讲明白的Java中的浅拷贝与深拷贝\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1634887330000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":11},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":9.38,"words":2814},"filePathRelative":"basic-extra-meal/deep-copy.md","localizedDate":"2021年10月22日","excerpt":"<p>“哥，听说浅拷贝和深拷贝是 Java 面试中经常会被问到的一个问题，是这样吗？”</p>\\n<p>“还真的是，而且了解浅拷贝和深拷贝的原理，对 Java 是值传递还是引用传递也会有更深的理解。”我肯定地回答。</p>\\n<p>“不管是浅拷贝还是深拷贝，都可以通过调用 Object 类的 <code>clone()</code> 方法来完成。”我一边说，一边打开 Intellij IDEA，并找到了 <code>clone()</code> 方法的源码。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@HotSpotIntrinsicCandidate</span>\\n<span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">native</span> <span class=\\"token class-name\\">Object</span> <span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">CloneNotSupportedException</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
