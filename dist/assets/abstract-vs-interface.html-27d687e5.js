const a=JSON.parse('{"key":"v-1babc6ca","path":"/oo/abstract-vs-interface.html","title":"Java 抽象类和接口的区别，看这一篇就够了","lang":"zh-CN","frontmatter":{"title":"Java 抽象类和接口的区别，看这一篇就够了","shortTitle":"Java抽象类和接口的区别","description":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java抽象类和接口的区别","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java 接口,接口,interface"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/oo/abstract-vs-interface.html"}],["meta",{"property":"og:site_name","content":"Java程序员进阶之路"}],["meta",{"property":"og:title","content":"Java 抽象类和接口的区别，看这一篇就够了"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java抽象类和接口的区别"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-06T02:22:41.000Z"}],["meta",{"property":"article:tag","content":"面向对象编程"}],["meta",{"property":"article:modified_time","content":"2023-01-06T02:22:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 抽象类和接口的区别，看这一篇就够了\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-06T02:22:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"01、抽象类","slug":"_01、抽象类","link":"#_01、抽象类","children":[]},{"level":2,"title":"02、接口","slug":"_02、接口","link":"#_02、接口","children":[]},{"level":2,"title":"03、两者差别","slug":"_03、两者差别","link":"#_03、两者差别","children":[]}],"git":{"createdTime":1660095699000,"updatedTime":1672971761000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":5},{"name":"alexxu","email":"alexxu@blackfish.cn","commits":1}]},"readingTime":{"minutes":5.44,"words":1633},"filePathRelative":"oo/abstract-vs-interface.md","localizedDate":"2022年8月10日","excerpt":"<p>通过前面两篇，我们已经深入地了解了 Java 抽象类和 Java 接口，那这篇我们来重点说一下抽象类和接口之间的区别。</p>\\n<h2> 01、抽象类</h2>\\n<p>在 Java 中，通过关键字 <code>abstract</code> 定义的类叫做抽象类。Java 是一门面向对象的语言，因此所有的对象都是通过类来描述的；但反过来，并不是所有的类都是用来描述对象的，抽象类就是其中的一种。</p>\\n<p>以下示例展示了一个简单的抽象类：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 个人认为，一名教练必须攻守兼备</span>\\n<span class=\\"token keyword\\">abstract</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Coach</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">abstract</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">defend</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">abstract</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">attack</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
