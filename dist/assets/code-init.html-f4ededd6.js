const a=JSON.parse('{"key":"v-42f4881f","path":"/oo/code-init.html","title":"Java中的代码初始化块：对成员变量进行更复杂的赋值","lang":"zh-CN","frontmatter":{"title":"Java中的代码初始化块：对成员变量进行更复杂的赋值","shortTitle":"Java中的代码初始化块","description":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java中的代码初始化块：对成员变量进行更复杂的赋值","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java入门,教程,Java代码初始化块,代码初始化块"}],["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/oo/code-init.html"}],["meta",{"property":"og:site_name","content":"Java程序员进阶之路"}],["meta",{"property":"og:title","content":"Java中的代码初始化块：对成员变量进行更复杂的赋值"}],["meta",{"property":"og:description","content":"Java程序员进阶之路，小白的零基础Java教程，认真聊聊 Java中的代码初始化块：对成员变量进行更复杂的赋值"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:tag","content":"面向对象编程"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中的代码初始化块：对成员变量进行更复杂的赋值\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1634887330000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":11},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":4.05,"words":1214},"filePathRelative":"oo/code-init.md","localizedDate":"2021年10月22日","excerpt":"<p>“哥，今天我们要学习的内容是‘代码初始化块’，对吧？”看来三妹已经提前预习了我上次留给她的作业。</p>\\n<p>“是的，三妹。代码初始化块用于初始化一些成员变量。 ”我面带着朴实无华的微笑回答着她，“对象在创建的时候会执行代码初始化块。”</p>\\n<p>“可以直接通过‘=’操作符对成员变量进行初始化，但通过代码初始化块可以做更多的事情，比如说打印出成员变量初始化后的值。”</p>\\n<p>“三妹，来看下面的代码，我们可以直接通过 <code>=</code> 操作符对成员变量进行初始化。”</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Bike</span><span class=\\"token punctuation\\">{</span>  \\n    <span class=\\"token keyword\\">int</span> speed<span class=\\"token operator\\">=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">;</span>  \\n<span class=\\"token punctuation\\">}</span>  \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
